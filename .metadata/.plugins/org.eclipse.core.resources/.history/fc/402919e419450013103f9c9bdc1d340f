package com.example.itake;

import java.util.Calendar;
import java.util.Date;

import android.R;
import android.app.ListActivity;
import android.app.Notification;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Typeface;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.Window;
import android.widget.SimpleCursorAdapter;
import android.widget.SimpleCursorAdapter.ViewBinder;
import android.widget.TextView;

public class AlarmActivity extends ListActivity 
{    
    private TextView headingText;   
    private Typeface font;
     
    public final Calendar cal = Calendar.getInstance();
    public final Date dt = new Date();
 
    @Override
    public void onCreate(Bundle savedInstanceState) 
    {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.main);
         
        headingText = (TextView) findViewById(R.id.heading_tv);
        font = Typeface.createFromAsset(getAssets(), "fonts/OpenSans.ttf");
        headingText.setTypeface(font);
         
        registerForContextMenu(getListView());          
    }
     
    private Cursor createCursor() 
    {
        long time = cal.getTimeInMillis();
        Cursor c = iTake.db.rawQuery("SELECT * FROM Notification WHERE time BETWEEN "+
        		time+" AND "+(time+86400000), null);
        
        startManagingCursor(c);
        return c;
    }
     
    @Override
    protected void onResume() 
    {
        super.onResume();
 
        SimpleCursorAdapter adapter = new SimpleCursorAdapter(this, R.layout.row, createCursor(), 
                new String[]{Notification.COL_MSG, Notification.COL_DATETIME}, 
                new int[]{R.id.msg_tv, R.id.time_tv});
         
        adapter.setViewBinder(new ViewBinder() 
        {
            @Override
            public boolean setViewValue(View view, Cursor cursor, int columnIndex) 
            {
                if (view.getId() == R.id.msg_tv) 
                {
                    return false;
                }
                
                TextView tv = (TextView)view;
                switch(view.getId()) 
                {
	                case R.id.time_tv: dt.setTime(cursor.getLong(columnIndex));
	                    tv.setText(dt.getHours()+":"+dt.getMinutes()); break;
                }
                return true;
            }
        });
        setListAdapter(adapter);
    }   

    public void onClick(View v) 
    {
        switch (v.getId())
        {
	        case R.id.imageButton1: startActivity(new Intent(this, SettingsActivity.class)); break;      
	        case R.id.imageButton2: startActivity(new Intent(this, AddAlarmActivity.class)); break;
	        case R.id.imageButton3: cal.add(Calendar.DATE, -1); 
	        	((SimpleCursorAdapter)getListAdapter()).changeCursor(createCursor()); break;
	        case R.id.imageButton4: cal.add(Calendar.DATE, 1);
	            ((SimpleCursorAdapter)getListAdapter()).changeCursor(createCursor()); break;
        }
    }
                    
    @Override
    protected void onSaveInstanceState(Bundle outState) 
    {
        super.onSaveInstanceState(outState);
        outState.putLong("cal", cal.getTimeInMillis());
    }   
     
    @Override
    protected void onRestoreInstanceState(Bundle state) 
    {
        super.onRestoreInstanceState(state);
        cal.setTimeInMillis(state.getLong("cal"));
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu)
    {
        getMenuInflater().inflate(R.menu.options_menu, menu);
        return true;
    }
     
    @Override
    public boolean onPrepareOptionsMenu(Menu menu) 
    {
        if (getListAdapter().isEmpty()) 
        {
            menu.findItem(R.id.menu_delete_all).setEnabled(false);
        } 
        else 
        {
            menu.findItem(R.id.menu_delete_all).setEnabled(true);
        }
        return true;
    }   
     
    @Override
    public boolean onOptionsItemSelected(MenuItem item) 
    {
        switch (item.getItemId()) 
        {
    	    case R.id.menu_delete_all:      
    	        Intent cancelAll = new Intent(this, AlarmService.class);
    	        cancelAll.putExtra("startTime", cal.getTimeInMillis());
    	        cancelAll.putExtra("endTime", cal.getTimeInMillis()+86400000);
    	        cancelAll.setAction(AlarmService.CANCEL);
    	        startService(cancelAll);
    	         
    	        SimpleCursorAdapter adapter = (SimpleCursorAdapter) getListAdapter();
    	        adapter.getCursor().requery();
    	        adapter.notifyDataSetChanged();         
    	        return true;
        }       
        return super.onOptionsItemSelected(item);
    }
}
