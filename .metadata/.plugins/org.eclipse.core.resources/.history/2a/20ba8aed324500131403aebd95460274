/**
 * 
 */
package com.example.itake;

import java.util.ArrayList;
import java.util.Calendar;

import android.app.Activity;
import android.app.AlarmManager;
import android.app.PendingIntent;
import android.app.TimePickerDialog;
import android.app.TimePickerDialog.OnTimeSetListener;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.TimePicker;
import android.widget.Toast;

/**
 * @author Wolfpack16 (Alex Kane)
 *
 */
public class AlarmTimer extends Activity 
{
	TimePicker myTimePicker;
    //Button buttonstartSetDialog;
	Button SetAlarm;
	Button CancelAlarm;
    TextView textAlarmPrompt;
    TimePickerDialog timePickerDialog;

    final static int RQS_1 = 1; //Request Code for Intents
    ArrayList<PendingIntent> intentArray = new ArrayList<PendingIntent>();

    @Override
    public void onCreate(Bundle savedInstanceState) 
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        textAlarmPrompt = (TextView) findViewById(R.id.alarmprompt);
        
        SetAlarm = (Button) findViewById(R.id.setAlarm);
        CancelAlarm = (Button) findViewById(R.id.cancelAlarm);    

        SetAlarm.setOnClickListener(new Button.OnClickListener()
        {
        	@Override
        	public void onClick(View arg0) 
        	{
        		// TODO Auto-generated method stub
        		textAlarmPrompt.setText("");
                openTimePickerDialog(false);
        	}
        });

        CancelAlarm.setOnClickListener(new Button.OnClickListener()
        {
        	@Override
        	public void onClick(View arg0) 
        	{
        		// TODO Auto-generated method stub
        		if (intentArray.size() != 0)
        		{
	        		AlarmManager alarmManager = (AlarmManager)getSystemService(ALARM_SERVICE);
	        		alarmManager.cancel(intentArray.get(0));
	        		intentArray.remove(intentArray.get(0));
	        		
	        		// Tell the user about what we did.
	        		Toast.makeText(getBaseContext(), "Alarm Cancelled!", Toast.LENGTH_LONG).show();
        		}
        		else
        		{
        			Toast.makeText(getBaseContext(), "No Alarms Exist!", Toast.LENGTH_LONG).show();
        		}
        	}
        });
    }
    
    private void openTimePickerDialog(boolean is24r) 
    {
        Calendar calendar = Calendar.getInstance();

        timePickerDialog = new TimePickerDialog(AlarmTimer.this,
        		onTimeSetListener, calendar.get(Calendar.HOUR_OF_DAY),
                calendar.get(Calendar.MINUTE), is24r);
        
        timePickerDialog.setTitle("Set Alarm Time");
        timePickerDialog.show();
    }

    OnTimeSetListener onTimeSetListener = new OnTimeSetListener() 
    {
        @Override
        public void onTimeSet(TimePicker view, int hourOfDay, int minute) 
        {
            Calendar calNow = Calendar.getInstance();
            Calendar calset = (Calendar) calNow.clone();

            calset.set(Calendar.HOUR_OF_DAY, hourOfDay);
            calset.set(Calendar.MINUTE, minute);
            calset.set(Calendar.SECOND, 0);
            calset.set(Calendar.MILLISECOND, 0);

            if (calset.compareTo(calNow) <= 0) 
            {
                // Today Set time passed, count to tomorrow
                calset.add(Calendar.DATE, 1);
            }
            setalarm(calset);
        }
    };
    
    public void setalarm(Calendar targetCal)
    {      
        Intent intent = new Intent(getBaseContext(), AlarmOnReceive.class);
        PendingIntent pendingIntent = PendingIntent.getBroadcast(getBaseContext(), intentArray.size(),
        		intent, PendingIntent.FLAG_UPDATE_CURRENT);
        AlarmManager alarmManager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);
        alarmManager.setRepeating(AlarmManager.RTC_WAKEUP, targetCal.getTimeInMillis(), AlarmManager.INTERVAL_DAY, pendingIntent);
        intentArray.add(pendingIntent);
        Toast.makeText(getBaseContext(), "Alarm Created!", Toast.LENGTH_LONG).show();
    }
}
